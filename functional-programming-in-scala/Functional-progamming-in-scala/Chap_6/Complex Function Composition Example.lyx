#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass scrartcl
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation landscape
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Complex Function Composition Example
\end_layout

\begin_layout Section*
Example from Functional Programming in Scala - Chapter 6
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

trait RNG {
\end_layout

\begin_layout Plain Layout

  def nextInt: (Int,RNG)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

case class SimpleRNG(seed Long) extends RNG {
\end_layout

\begin_layout Plain Layout

  def nextInt: (Int, RNG) = {
\end_layout

\begin_layout Plain Layout

   ...
 code to generate a random int and
\end_layout

\begin_layout Plain Layout

   ...
 new state RNG
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

/*
\end_layout

\begin_layout Plain Layout

 * This is our state action
\end_layout

\begin_layout Plain Layout

 * We are defining a type Rand
\end_layout

\begin_layout Plain Layout

 * that is a function that takes
\end_layout

\begin_layout Plain Layout

 * a RNG and generates a tuple2
\end_layout

\begin_layout Plain Layout

 * containing a generated A plus
\end_layout

\begin_layout Plain Layout

 * the new state RNG
\end_layout

\begin_layout Plain Layout

 */
\end_layout

\begin_layout Plain Layout

type Rand[+A] = RNG => (A,RNG)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

/*
\end_layout

\begin_layout Plain Layout

 * Simple use
\end_layout

\begin_layout Plain Layout

 */
\end_layout

\begin_layout Plain Layout

def int: Rand[Int] = _.nextInt
\end_layout

\begin_layout Plain Layout

// e.g.
 int(SimpleRNG(1))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section*
flatMap/Map Example
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

flatMap(f: Rand[A])(g: A => Rand[B]): Rand[B]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//expands to: -
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

flatMap(f: RNG => (A,RNG) ) 
\end_layout

\begin_layout Plain Layout

       (g: A => RNG => (B,RNG) ):
\end_layout

\begin_layout Plain Layout

       RNG => (B,RNG)
\end_layout

\begin_layout Plain Layout

       
\end_layout

\begin_layout Plain Layout

// map written with flatMap
\end_layout

\begin_layout Plain Layout

map[A,B](s: Rand[A])(f: A => B): Rand[B] =
\end_layout

\begin_layout Plain Layout

  flatMap(s){ i => rng => (f(i),rng)
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_body
\end_document
